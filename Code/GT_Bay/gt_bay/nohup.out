[2018-04-08 15:31:32 -0400] [3194] [DEBUG] Current configuration:
  worker_class: gevent
  threads: 1
  max_requests: 0
  limit_request_line: 4094
  worker_int: <function WorkerInt.worker_int at 0x7fe5800f9d90>
  pre_request: <function PreRequest.pre_request at 0x7fe57fbf72f0>
  child_exit: <function ChildExit.child_exit at 0x7fe57fbf7598>
  forwarded_allow_ips: ['127.0.0.1']
  worker_exit: <function WorkerExit.worker_exit at 0x7fe57fbf7730>
  access_log_format: %(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"
  syslog_prefix: None
  statsd_host: None
  keepalive: 2
  check_config: False
  when_ready: <function WhenReady.when_ready at 0x7fe5800f9730>
  nworkers_changed: <function NumWorkersChanged.nworkers_changed at 0x7fe57fbf78c8>
  ca_certs: None
  suppress_ragged_eofs: True
  chdir: /home/eevans/Applications/python_envs/Code/6400Spring18Team047/Code/GT_Bay/gt_bay
  worker_tmp_dir: None
  initgroups: False
  spew: False
  proc_name: None
  umask: 0
  on_starting: <function OnStarting.on_starting at 0x7fe5800f9400>
  on_reload: <function OnReload.on_reload at 0x7fe5800f9598>
  post_fork: <function Postfork.post_fork at 0x7fe5800f9a60>
  worker_abort: <function WorkerAbort.worker_abort at 0x7fe5800f9f28>
  do_handshake_on_connect: False
  raw_env: []
  pidfile: gunicorn.pid
  max_requests_jitter: 0
  on_exit: <function OnExit.on_exit at 0x7fe57fbf7a60>
  ciphers: TLSv1
  reload_engine: auto
  logconfig: None
  timeout: 120
  enable_stdio_inheritance: False
  statsd_prefix: 
  limit_request_fields: 100
  proxy_allow_ips: ['127.0.0.1']
  errorlog: -
  syslog_facility: user
  worker_connections: 1000
  config: None
  preload_app: False
  secure_scheme_headers: {'X-FORWARDED-SSL': 'on', 'X-FORWARDED-PROTOCOL': 'ssl', 'X-FORWARDED-PROTO': 'https'}
  raw_paste_global_conf: []
  reload: False
  pre_exec: <function PreExec.pre_exec at 0x7fe57fbf7158>
  default_proc_name: gt_bay_app:app
  user: 1000
  loglevel: debug
  workers: 3
  pre_fork: <function Prefork.pre_fork at 0x7fe5800f98c8>
  graceful_timeout: 30
  keyfile: None
  ssl_version: 2
  accesslog: None
  logger_class: gunicorn.glogging.Logger
  group: 1000
  tmp_upload_dir: None
  paste: None
  capture_output: False
  certfile: None
  syslog_addr: udp://localhost:514
  daemon: False
  limit_request_field_size: 8190
  bind: ['0.0.0.0:9000']
  proxy_protocol: False
  cert_reqs: 0
  syslog: False
  sendfile: None
  pythonpath: None
  post_worker_init: <function PostWorkerInit.post_worker_init at 0x7fe5800f9bf8>
  post_request: <function PostRequest.post_request at 0x7fe57fbf7400>
  backlog: 2048
[2018-04-08 15:31:32 -0400] [3194] [INFO] Starting gunicorn 19.7.1
[2018-04-08 15:31:32 -0400] [3194] [DEBUG] Arbiter booted
[2018-04-08 15:31:32 -0400] [3194] [INFO] Listening at: http://0.0.0.0:9000 (3194)
[2018-04-08 15:31:32 -0400] [3194] [INFO] Using worker: gevent
[2018-04-08 15:31:32 -0400] [3198] [INFO] Booting worker with pid: 3198
[2018-04-08 15:31:32 -0400] [3199] [INFO] Booting worker with pid: 3199
[2018-04-08 15:31:32 -0400] [3200] [INFO] Booting worker with pid: 3200
[2018-04-08 15:31:32 -0400] [3194] [DEBUG] 3 workers
DEBUG:root:get_categories
DEBUG:root:get_categories
DEBUG:root:get_categories
DEBUG:root:get_categories
DEBUG:root:get_categories
DEBUG:root:get_categories
[2018-04-08 15:32:05 -0400] [3200] [DEBUG] GET /
DEBUG:root:ui_data [{}]
[2018-04-08 15:32:05 -0400] [3200] [DEBUG] GET /static/css/bootstrap.min.css
[2018-04-08 15:32:05 -0400] [3198] [DEBUG] GET /static/css/ie10-viewport-bug-workaround.css
[2018-04-08 15:32:05 -0400] [3199] [DEBUG] GET /static/sticky-footer-navbar.css
[2018-04-08 15:32:05 -0400] [3198] [DEBUG] GET /static/js/jquery.ui.touch-punch.min.js
[2018-04-08 15:32:05 -0400] [3199] [DEBUG] GET /static/js/ie-emulation-modes-warning.js
[2018-04-08 15:32:05 -0400] [3198] [DEBUG] GET /static/js/bootstrap.min.js
[2018-04-08 15:32:05 -0400] [3198] [DEBUG] GET /static/js/ie10-viewport-bug-workaround.js
[2018-04-08 15:32:05 -0400] [3198] [DEBUG] GET /images/gt_buzz.png
[2018-04-08 15:32:05 -0400] [3198] [DEBUG] GET /static/images/favicon.ico
[2018-04-08 15:32:08 -0400] [3199] [DEBUG] GET /login
[2018-04-08 15:32:08 -0400] [3199] [DEBUG] GET /static/signin.css
[2018-04-08 15:32:17 -0400] [3198] [DEBUG] POST /login
DEBUG:root:user_name=admin01, password=password
DEBUG:root:login user_name=admin01, password=password
DEBUG:root:data ('admin01', 'DBA')
DEBUG:root:user=<data_access.user.User object at 0x7fe57ce4a208>, error=None
[2018-04-08 15:32:17 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:32:25 -0400] [3199] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': None, 'username': 'user01', 'num_rated': 3, 'num_sold': None}]
[2018-04-08 15:33:08 -0400] [3200] [DEBUG] GET /category_report
DEBUG:root:data [{'Total Items': 1, 'Min Price': Decimal('100.00'), 'Average Price': Decimal('100.00'), 'Category': 'Art', 'Max Price': Decimal('100.00')}, {'Total Items': 1, 'Min Price': Decimal('20.00'), 'Average Price': Decimal('20.00'), 'Category': 'Books', 'Max Price': Decimal('20.00')}, {'Total Items': 3, 'Min Price': Decimal('30.00'), 'Average Price': Decimal('30.33'), 'Category': 'Electronics', 'Max Price': Decimal('31.00')}, {'Total Items': 0, 'Min Price': None, 'Average Price': None, 'Category': 'Home and Garden', 'Max Price': None}, {'Total Items': 0, 'Min Price': None, 'Average Price': None, 'Category': 'Other', 'Max Price': None}, {'Total Items': 1, 'Min Price': Decimal('300.00'), 'Average Price': Decimal('300.00'), 'Category': 'Sports Goods', 'Max Price': Decimal('300.00')}, {'Total Items': 0, 'Min Price': None, 'Average Price': None, 'Category': 'Toys', 'Max Price': None}]
[2018-04-08 15:34:03 -0400] [3199] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:34:06 -0400] [3200] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': None, 'username': 'user01', 'num_rated': 3, 'num_sold': None}]
[2018-04-08 15:34:18 -0400] [3199] [DEBUG] GET /category_report
DEBUG:root:data [{'Total Items': 1, 'Min Price': Decimal('100.00'), 'Average Price': Decimal('100.00'), 'Category': 'Art', 'Max Price': Decimal('100.00')}, {'Total Items': 1, 'Min Price': Decimal('20.00'), 'Average Price': Decimal('20.00'), 'Category': 'Books', 'Max Price': Decimal('20.00')}, {'Total Items': 3, 'Min Price': Decimal('30.00'), 'Average Price': Decimal('30.33'), 'Category': 'Electronics', 'Max Price': Decimal('31.00')}, {'Total Items': 0, 'Min Price': None, 'Average Price': None, 'Category': 'Home and Garden', 'Max Price': None}, {'Total Items': 0, 'Min Price': None, 'Average Price': None, 'Category': 'Other', 'Max Price': None}, {'Total Items': 1, 'Min Price': Decimal('300.00'), 'Average Price': Decimal('300.00'), 'Category': 'Sports Goods', 'Max Price': Decimal('300.00')}, {'Total Items': 0, 'Min Price': None, 'Average Price': None, 'Category': 'Toys', 'Max Price': None}]
[2018-04-08 15:34:24 -0400] [3198] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': None, 'username': 'user01', 'num_rated': 3, 'num_sold': None}]
[2018-04-08 15:38:04 -0400] [3200] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': None, 'username': 'user01', 'num_rated': 3, 'num_sold': None}]
[2018-04-08 15:38:36 -0400] [3198] [DEBUG] GET /
DEBUG:root:ui_data [{}]
[2018-04-08 15:38:38 -0400] [3199] [DEBUG] GET /auction_results
DEBUG:root:before  cursor.execute(auction_results_sql)
DEBUG:root:after  cursor.execute(auction_results_sql)
DEBUG:root:ret_val [{'item_name': 'Eric art item 1', 'auction_end_time': datetime.datetime(2018, 4, 7, 18, 24, 7), 'username': 'user01', 'item_id': 7, 'max_bid': Decimal('100.00')}, {'item_name': 'clock radio', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': 'user02', 'item_id': 1, 'max_bid': Decimal('20.00')}, {'item_name': 'ipod classic', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': 'user03', 'item_id': 3, 'max_bid': Decimal('21.00')}, {'item_name': 'fishing boat', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 4, 'max_bid': None}, {'item_name': 'clock radio', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 5, 'max_bid': None}, {'item_name': 'surfboard', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 6, 'max_bid': None}, {'item_name': 'moby dick', 'auction_end_time': datetime.datetime(2018, 3, 26, 9, 1, 52), 'username': 'user02', 'item_id': 2, 'max_bid': Decimal('19.00')}]
[2018-04-08 15:42:37 -0400] [3198] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:42:39 -0400] [3198] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:42:40 -0400] [3198] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 1', 'Funz to Playz', 'Toys', 'Good', 0, None, datetime.datetime(2018, 4, 15, 15, 21, 38), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val ()
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('1.00'),)
[2018-04-08 15:42:51 -0400] [3200] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': None, 'username': 'user01', 'num_rated': 3, 'num_sold': None}]
[2018-04-08 15:43:00 -0400] [3199] [DEBUG] GET /logout
[2018-04-08 15:43:00 -0400] [3199] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:43:02 -0400] [3199] [DEBUG] GET /login
[2018-04-08 15:43:08 -0400] [3200] [DEBUG] POST /login
DEBUG:root:user_name=user02, password=password
DEBUG:root:login user_name=user02, password=password
DEBUG:root:data ('user02', None)
DEBUG:root:user=<data_access.user.User object at 0x7fe57ce68e48>, error=None
[2018-04-08 15:43:08 -0400] [3200] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:43:09 -0400] [3200] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:43:10 -0400] [3200] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:43:11 -0400] [3200] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 1', 'Funz to Playz', 'Toys', 'Good', 0, None, datetime.datetime(2018, 4, 15, 15, 21, 38), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val ()
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('1.00'),)
[2018-04-08 15:43:25 -0400] [3198] [DEBUG] GET /logout
[2018-04-08 15:43:25 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:43:28 -0400] [3200] [DEBUG] GET /login
[2018-04-08 15:43:35 -0400] [3198] [DEBUG] POST /login
DEBUG:root:user_name=user01, password=password
DEBUG:root:login user_name=user01, password=password
DEBUG:root:data ('user01', None)
DEBUG:root:user=<data_access.user.User object at 0x7fe57ce32cf8>, error=None
[2018-04-08 15:43:35 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:43:39 -0400] [3200] [DEBUG] GET /list_new_item
[2018-04-08 15:44:15 -0400] [3198] [DEBUG] POST /list_new_item
DEBUG:root:ListNewItemForm: In validate method
DEBUG:root:field.data='1.00'
DEBUG:root:decimal_place_index=1 after_dec=.00 len=3
DEBUG:root:field.data='2.00'
DEBUG:root:decimal_place_index=1 after_dec=.00 len=3
DEBUG:root:field.data='5.00'
DEBUG:root:decimal_place_index=1 after_dec=.00 len=3
DEBUG:root:now_sale_price 5.0
DEBUG:root:checking start_bid > min_sale_price
DEBUG:root:PASSED form.validate_on_submit [now_sale_price='5.00' type=<class 'str'>]
DEBUG:root:returns_accepted=[ImmutableMultiDict([('item_name', 'Eric Toy item 2'), ('returns_accepted', 'y'), ('csrf_token', 'IjI4Mzc2ZGNjMWIzMTk3MzFiYmJmMzIyY2U4MGRhZDYwMDA1ZDBiZWUi.DawCaw.sghjmFvJTnme_U7huEL2xq_-kjo'), ('start_bid', '1.00'), ('condition', '4'), ('min_sale_price', '2.00'), ('category', '6'), ('description', 'Also quite fun'), ('now_sale_price', '5.00'), ('submit', 'List New Item'), ('auction_days', '1')])]
DEBUG:root:in constructor
DEBUG:root:passed constructor
DEBUG:root:persist item
DEBUG:root:INSERT INTO Item(item_name, description, item_condition, returnable, starting_bid, min_sale_price, get_it_now_price, auction_length, auction_end_time, category_id, listing_username) VALUES ('Eric Toy item 2', 'Also quite fun', 4, True, 1.00, 2.00, 5.00, 1, '2018-04-09 15:44:15', 6, 'user01')
DEBUG:root:passed item.persist
DEBUG:root:passed if item_id is not None
[2018-04-08 15:44:15 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:44:16 -0400] [3198] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:44:17 -0400] [3198] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 2', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 9, 15, 44, 15), 'item_id': 9, 'get_it_now_price': Decimal('5.00'), 'high_bidder': None}, {'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 2', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 9, 15, 44, 15), 'item_id': 9, 'get_it_now_price': Decimal('5.00'), 'high_bidder': None}, {'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:44:23 -0400] [3199] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 2', 'Also quite fun', 'Toys', 'Very Good', 1, Decimal('5.00'), datetime.datetime(2018, 4, 9, 15, 44, 15), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val ()
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('1.00'),)
[2018-04-08 15:44:27 -0400] [3198] [DEBUG] GET /logout
[2018-04-08 15:44:27 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:44:28 -0400] [3198] [DEBUG] GET /login
[2018-04-08 15:44:36 -0400] [3199] [DEBUG] POST /login
DEBUG:root:user_name=admin01, password=password
DEBUG:root:login user_name=admin01, password=password
DEBUG:root:data ('admin01', 'DBA')
DEBUG:root:user=<data_access.user.User object at 0x7fe57cdc3ac8>, error=None
[2018-04-08 15:44:36 -0400] [3199] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:44:38 -0400] [3198] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': None, 'username': 'user01', 'num_rated': 3, 'num_sold': None}]
[2018-04-08 15:44:57 -0400] [3200] [DEBUG] GET /logout
[2018-04-08 15:44:57 -0400] [3200] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:44:59 -0400] [3200] [DEBUG] GET /login
[2018-04-08 15:45:03 -0400] [3198] [DEBUG] POST /login
DEBUG:root:user_name=user02, password=password
DEBUG:root:login user_name=user02, password=password
DEBUG:root:data ('user02', None)
DEBUG:root:user=<data_access.user.User object at 0x7fe57cdd62e8>, error=None
[2018-04-08 15:45:03 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:45:05 -0400] [3198] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:45:06 -0400] [3198] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 2', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 9, 15, 44, 15), 'item_id': 9, 'get_it_now_price': Decimal('5.00'), 'high_bidder': None}, {'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 2', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 9, 15, 44, 15), 'item_id': 9, 'get_it_now_price': Decimal('5.00'), 'high_bidder': None}, {'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:45:07 -0400] [3198] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 2', 'Also quite fun', 'Toys', 'Very Good', 1, Decimal('5.00'), datetime.datetime(2018, 4, 9, 15, 44, 15), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val ()
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('1.00'),)
[2018-04-08 15:45:10 -0400] [3200] [DEBUG] GET /get_now
DEBUG:root:get_now SQL 1: 
        SET @now = CURRENT_TIMESTAMP;
        
DEBUG:root:get_now SQL 2: 
        UPDATE Item
        SET auction_end_time = 
        IF(auction_end_time > @now, 
        @now, auction_end_time)
        WHERE item_id = 9;
        
DEBUG:root:get_now SQL 3: 
        INSERT INTO Bid 
        (username, item_id, bid_amount, bid_time)
        SELECT 
        'user02', 9, get_it_now_price, @now
        FROM Item 
        WHERE Item.item_id = 9 AND 
              Item.auction_end_time = @now;
        
DEBUG:root:1 None
[2018-04-08 15:45:10 -0400] [3200] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 2', 'Also quite fun', 'Toys', 'Very Good', 1, Decimal('5.00'), datetime.datetime(2018, 4, 8, 15, 45, 10), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val [{'bid_time': datetime.datetime(2018, 4, 8, 15, 45, 10), 'username': 'user02', 'bid_amount': Decimal('5.00')}]
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('6.00'),)
[2018-04-08 15:45:13 -0400] [3198] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:45:15 -0400] [3198] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:45:17 -0400] [3198] [DEBUG] GET /logout
[2018-04-08 15:45:17 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:45:19 -0400] [3198] [DEBUG] GET /login
[2018-04-08 15:45:26 -0400] [3200] [DEBUG] POST /login
DEBUG:root:user_name=admin01, password=password
DEBUG:root:login user_name=admin01, password=password
DEBUG:root:data ('admin01', 'DBA')
DEBUG:root:user=<data_access.user.User object at 0x7fe57cd8e358>, error=None
[2018-04-08 15:45:26 -0400] [3200] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:45:29 -0400] [3199] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': 2, 'username': 'user01', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 3, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}]
[2018-04-08 15:52:53 -0400] [3200] [DEBUG] GET /logout
[2018-04-08 15:52:53 -0400] [3200] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:52:55 -0400] [3200] [DEBUG] GET /login
[2018-04-08 15:53:00 -0400] [3198] [DEBUG] POST /login
DEBUG:root:user_name=user03, password=password
DEBUG:root:login user_name=user03, password=password
DEBUG:root:data ('user03', None)
DEBUG:root:user=<data_access.user.User object at 0x7fe57ce721d0>, error=None
[2018-04-08 15:53:00 -0400] [3198] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:53:04 -0400] [3199] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:53:05 -0400] [3199] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:53:07 -0400] [3198] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 1', 'Funz to Playz', 'Toys', 'Good', 0, None, datetime.datetime(2018, 4, 15, 15, 21, 38), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val ()
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('1.00'),)
[2018-04-08 15:53:11 -0400] [3199] [DEBUG] GET /item_rating
DEBUG:root:in rating constructor
DEBUG:root:8
DEBUG:root:
            SELECT r.username, r.numstars, r.rating_time, r.comments, i.item_name, i.item_id
            FROM Rating r INNER JOIN Item i ON i.item_id = r.item_id WHERE item_name = 
            (SELECT item_name FROM Item WHERE item_id = 8) ORDER BY r.rating_time DESC;
            
DEBUG:root:get_rating ()
DEBUG:root:()
DEBUG:root:
                    SELECT AVG(numstars)
                    FROM Rating r inner join Item i on r.item_id = i.item_id
                    WHERE item_name = (SELECT item_name FROM Item WHERE item_id = 8)
                    
DEBUG:root:get_avg_rating {'AVG(numstars)': None}
DEBUG:root:{'AVG(numstars)': None}
[2018-04-08 15:53:11 -0400] [3199] [DEBUG] GET /static/css/stars-stylesheet.css
[2018-04-08 15:53:11 -0400] [3199] [DEBUG] GET /static/images/star-off.svg
[2018-04-08 15:53:11 -0400] [3198] [DEBUG] GET /static/images/star-on.svg
[2018-04-08 15:53:26 -0400] [3200] [DEBUG] POST /item_rating
DEBUG:root:in rating constructor
DEBUG:root:persist rating
DEBUG:root:
        SELECT r.username, i.item_name
        FROM Rating r INNER JOIN Item i ON r.item_id = i.item_id
        WHERE r.username = 'user03' AND i.item_name = 'Eric Toy item 1'
        
DEBUG:root:already exists?
DEBUG:root:()
DEBUG:root:
            INSERT INTO Rating(username,item_id,numstars,comments) VALUES ('user03','8','4','Pretty not so bad, really ... I guess.')
DEBUG:root:in rating constructor
DEBUG:root:8
DEBUG:root:
            SELECT r.username, r.numstars, r.rating_time, r.comments, i.item_name, i.item_id
            FROM Rating r INNER JOIN Item i ON i.item_id = r.item_id WHERE item_name = 
            (SELECT item_name FROM Item WHERE item_id = 8) ORDER BY r.rating_time DESC;
            
DEBUG:root:get_rating [{'item_name': 'Eric Toy item 1', 'rating_time': datetime.datetime(2018, 4, 8, 15, 53, 26), 'numstars': 4, 'username': 'user03', 'comments': 'Pretty not so bad, really ... I guess.', 'item_id': 8}]
DEBUG:root:[{'item_name': 'Eric Toy item 1', 'rating_time': datetime.datetime(2018, 4, 8, 15, 53, 26), 'numstars': 4, 'username': 'user03', 'comments': 'Pretty not so bad, really ... I guess.', 'item_id': 8}]
DEBUG:root:
                    SELECT AVG(numstars)
                    FROM Rating r inner join Item i on r.item_id = i.item_id
                    WHERE item_name = (SELECT item_name FROM Item WHERE item_id = 8)
                    
DEBUG:root:get_avg_rating {'AVG(numstars)': Decimal('4.0000')}
DEBUG:root:{'AVG(numstars)': Decimal('4.0000')}
[2018-04-08 15:53:26 -0400] [3200] [DEBUG] GET /images/star-on.svg
[2018-04-08 15:53:26 -0400] [3200] [DEBUG] GET /images/star-off.svg
[2018-04-08 15:53:29 -0400] [3198] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 15:53:31 -0400] [3198] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Eric Toy item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 15, 21, 38), 'item_id': 8, 'get_it_now_price': None, 'high_bidder': None}]
[2018-04-08 15:53:32 -0400] [3198] [DEBUG] GET /get_item
DEBUG:root:		gt_bay_app.get_item.valid: form.errors={}
DEBUG:root:get_item ('Eric Toy item 1', 'Funz to Playz', 'Toys', 'Good', 0, None, datetime.datetime(2018, 4, 15, 15, 21, 38), 'user01')
DEBUG:root:before  cursor.execute(get_bids_sql)
DEBUG:root:after  cursor.execute(get_bids_sql)
DEBUG:root:ret_val ()
DEBUG:root:before  cursor.execute(get_min_sql)
DEBUG:root:after  cursor.execute(get_min_sql)
DEBUG:root:ret_val (Decimal('1.00'),)
[2018-04-08 15:53:33 -0400] [3198] [DEBUG] GET /item_rating
DEBUG:root:in rating constructor
DEBUG:root:8
DEBUG:root:
            SELECT r.username, r.numstars, r.rating_time, r.comments, i.item_name, i.item_id
            FROM Rating r INNER JOIN Item i ON i.item_id = r.item_id WHERE item_name = 
            (SELECT item_name FROM Item WHERE item_id = 8) ORDER BY r.rating_time DESC;
            
DEBUG:root:get_rating [{'item_name': 'Eric Toy item 1', 'rating_time': datetime.datetime(2018, 4, 8, 15, 53, 26), 'numstars': 4, 'username': 'user03', 'comments': 'Pretty not so bad, really ... I guess.', 'item_id': 8}]
DEBUG:root:[{'item_name': 'Eric Toy item 1', 'rating_time': datetime.datetime(2018, 4, 8, 15, 53, 26), 'numstars': 4, 'username': 'user03', 'comments': 'Pretty not so bad, really ... I guess.', 'item_id': 8}]
DEBUG:root:
                    SELECT AVG(numstars)
                    FROM Rating r inner join Item i on r.item_id = i.item_id
                    WHERE item_name = (SELECT item_name FROM Item WHERE item_id = 8)
                    
DEBUG:root:get_avg_rating {'AVG(numstars)': Decimal('4.0000')}
DEBUG:root:{'AVG(numstars)': Decimal('4.0000')}
[2018-04-08 15:53:38 -0400] [3200] [DEBUG] GET /logout
[2018-04-08 15:53:38 -0400] [3200] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:53:39 -0400] [3200] [DEBUG] GET /login
[2018-04-08 15:53:44 -0400] [3199] [DEBUG] POST /login
DEBUG:root:user_name=admin01, password=password
DEBUG:root:login user_name=admin01, password=password
DEBUG:root:data ('admin01', 'DBA')
DEBUG:root:user=<data_access.user.User object at 0x7fe57cdcc208>, error=None
[2018-04-08 15:53:44 -0400] [3199] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 15:53:46 -0400] [3198] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 4, 'num_sold': 1}, {'num_purchased': 1, 'num_listed': 2, 'username': 'user01', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 3, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}]
[2018-04-08 15:54:37 -0400] [3200] [DEBUG] GET /auction_results
DEBUG:root:before  cursor.execute(auction_results_sql)
DEBUG:root:after  cursor.execute(auction_results_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 2', 'auction_end_time': datetime.datetime(2018, 4, 8, 15, 45, 10), 'username': 'user02', 'item_id': 9, 'max_bid': Decimal('5.00')}, {'item_name': 'Eric art item 1', 'auction_end_time': datetime.datetime(2018, 4, 7, 18, 24, 7), 'username': 'user01', 'item_id': 7, 'max_bid': Decimal('100.00')}, {'item_name': 'clock radio', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': 'user02', 'item_id': 1, 'max_bid': Decimal('20.00')}, {'item_name': 'ipod classic', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': 'user03', 'item_id': 3, 'max_bid': Decimal('21.00')}, {'item_name': 'fishing boat', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 4, 'max_bid': None}, {'item_name': 'clock radio', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 5, 'max_bid': None}, {'item_name': 'surfboard', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 6, 'max_bid': None}, {'item_name': 'moby dick', 'auction_end_time': datetime.datetime(2018, 3, 26, 9, 1, 52), 'username': 'user02', 'item_id': 2, 'max_bid': Decimal('19.00')}]
[2018-04-08 15:54:49 -0400] [3199] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 4, 'num_sold': 1}, {'num_purchased': 3, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}, {'num_purchased': 1, 'num_listed': 2, 'username': 'user01', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': None, 'num_listed': 1, 'username': 'admin01', 'num_rated': None, 'num_sold': 1}]
[2018-04-08 15:55:04 -0400] [3198] [DEBUG] GET /auction_results
DEBUG:root:before  cursor.execute(auction_results_sql)
DEBUG:root:after  cursor.execute(auction_results_sql)
DEBUG:root:ret_val [{'item_name': 'Eric Toy item 2', 'auction_end_time': datetime.datetime(2018, 4, 8, 15, 45, 10), 'username': 'user02', 'item_id': 9, 'max_bid': Decimal('5.00')}, {'item_name': 'Eric art item 1', 'auction_end_time': datetime.datetime(2018, 4, 7, 18, 24, 7), 'username': 'user01', 'item_id': 7, 'max_bid': Decimal('100.00')}, {'item_name': 'clock radio', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': 'user02', 'item_id': 1, 'max_bid': Decimal('20.00')}, {'item_name': 'ipod classic', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': 'user03', 'item_id': 3, 'max_bid': Decimal('21.00')}, {'item_name': 'fishing boat', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 4, 'max_bid': None}, {'item_name': 'clock radio', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 5, 'max_bid': None}, {'item_name': 'surfboard', 'auction_end_time': datetime.datetime(2018, 3, 28, 9, 1, 52), 'username': None, 'item_id': 6, 'max_bid': None}, {'item_name': 'moby dick', 'auction_end_time': datetime.datetime(2018, 3, 26, 9, 1, 52), 'username': 'user02', 'item_id': 2, 'max_bid': Decimal('19.00')}]
[2018-04-08 16:00:55 -0400] [3199] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}]
[2018-04-08 16:01:02 -0400] [3200] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 16:01:04 -0400] [3200] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val ()
DEBUG:root:data ()
[2018-04-08 16:01:05 -0400] [3200] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 16:01:09 -0400] [3198] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}]
[2018-04-08 16:14:27 -0400] [3199] [DEBUG] GET /list_new_item
[2018-04-08 16:15:14 -0400] [3200] [DEBUG] POST /list_new_item
DEBUG:root:ListNewItemForm: In validate method
DEBUG:root:field.data='100.00'
DEBUG:root:decimal_place_index=3 after_dec=.00 len=3
DEBUG:root:field.data='200.00'
DEBUG:root:decimal_place_index=3 after_dec=.00 len=3
DEBUG:root:field.data='500.00'
DEBUG:root:decimal_place_index=3 after_dec=.00 len=3
DEBUG:root:now_sale_price 500.0
DEBUG:root:checking start_bid > min_sale_price
DEBUG:root:PASSED form.validate_on_submit [now_sale_price='500.00' type=<class 'str'>]
DEBUG:root:returns_accepted=[ImmutableMultiDict([('item_name', 'Admin01 item 1'), ('csrf_token', 'IjI4Mzc2ZGNjMWIzMTk3MzFiYmJmMzIyY2U4MGRhZDYwMDA1ZDBiZWUi.DawJow.g0gxH-1QYVuTIVYj4Xz3My96MBY'), ('start_bid', '100.00'), ('condition', '5'), ('min_sale_price', '200.00'), ('category', '1'), ('description', 'Some kinda adminy stuff.'), ('now_sale_price', '500.00'), ('submit', 'List New Item'), ('auction_days', '7')])]
DEBUG:root:in constructor
DEBUG:root:passed constructor
DEBUG:root:persist item
DEBUG:root:INSERT INTO Item(item_name, description, item_condition, returnable, starting_bid, min_sale_price, get_it_now_price, auction_length, auction_end_time, category_id, listing_username) VALUES ('Admin01 item 1', 'Some kinda adminy stuff.', 5, False, 100.00, 200.00, 500.00, 7, '2018-04-15 16:15:14', 1, 'admin01')
DEBUG:root:passed item.persist
DEBUG:root:passed if item_id is not None
[2018-04-08 16:15:14 -0400] [3200] [DEBUG] GET /index
DEBUG:root:ui_data [{}]
[2018-04-08 16:15:16 -0400] [3200] [DEBUG] GET /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:		gt_bay_app.search.valid: form.errors={}
[2018-04-08 16:15:17 -0400] [3200] [DEBUG] POST /search
DEBUG:root:

	gt_bay_app.search: START
DEBUG:root:

SearchForm: In validate method
DEBUG:root:
	forms.validate: self.minimum_price.errors = []
DEBUG:root:		forms.validate: self.minimum_price.data = 
DEBUG:root:
	forms.validate: self.maximum_price.errors = []
DEBUG:root:		forms.validate: self.maximum_price.data = 
DEBUG:root:	gt_bay_app.search: form.validate_on_submit()
DEBUG:root:in constructor
DEBUG:root:SQL [
            SELECT
              Item.item_id,
              item_name,
              bid_amount AS current_bid,
              username   AS high_bidder,
              get_it_now_price,
              auction_end_time
            FROM Item
              INNER JOIN Category
                ON Item.category_id = Category.category_id
              LEFT JOIN
              (SELECT
                 item_id,
                 bid_amount,
                 username
               FROM Bid b1 NATURAL JOIN
                 (SELECT
                    item_id,
                    max(bid_amount) AS bid_amount
                  FROM Bid
                  GROUP BY item_id) AS b2)
                AS CurrentBid
                ON Item.item_id = CurrentBid.item_id
            WHERE auction_end_time > NOW()
                  AND (item_name LIKE CONCAT('%', '', '%')
                       OR description LIKE CONCAT('%', '', '%'))
                  AND (0 IS NULL OR 0 = 0
                       OR Item.category_id = 0)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       >= NULL)
                  AND (NULL IS NULL OR
                       IF(bid_amount IS NULL, starting_bid, bid_amount)
                       <= NULL)
                  AND (0 IS NULL OR
                       item_condition >= 0)
            ORDER BY auction_end_time;
        ]
DEBUG:root:before  cursor.execute(search_sql)
DEBUG:root:after  cursor.execute(search_sql)
DEBUG:root:ret_val [{'item_name': 'Admin01 item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 16, 15, 14), 'item_id': 7, 'get_it_now_price': Decimal('500.00'), 'high_bidder': None}]
DEBUG:root:data [{'item_name': 'Admin01 item 1', 'current_bid': None, 'auction_end_time': datetime.datetime(2018, 4, 15, 16, 15, 14), 'item_id': 7, 'get_it_now_price': Decimal('500.00'), 'high_bidder': None}]
[2018-04-08 16:15:24 -0400] [3199] [DEBUG] GET /user_report
DEBUG:root:data [{'num_purchased': 1, 'num_listed': 4, 'username': 'user03', 'num_rated': 3, 'num_sold': 1}, {'num_purchased': 2, 'num_listed': 2, 'username': 'user02', 'num_rated': 3, 'num_sold': 2}]
